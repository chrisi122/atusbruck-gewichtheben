import axios from "axios";

// export const getSinclairCoefficient = async (bodyweight, min = null) => {
//   try {
//     const res = await axios.get(
//       process.env.NEXT_PUBLIC_STRAPI_URL + "/api/sinclair?populate=*"
//     );

//     return {
//       male: res.data.data.attributes.sinclair,
//     };
//   } catch (error) {
//     console.log(error);
//     return null;
//   }
// };

const sinclair = {
  "male": {
    "A": 0.75194503,
    "b": 175.508,
    "min": 32,
  },
  "female": {
    "A": 0.783497476,
    "b": 153.655,
    "min": 28,
  },
};

const melzer = {
  "male": [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1.016, 1.031, 1.046, 1.059, 1.072, 1.083, 1.096, 1.109,
    1.122, 1.135, 1.149, 1.162, 1.176, 1.189, 1.203, 1.218, 1.233, 1.248, 1.263,
    1.279, 1.297, 1.316, 1.338, 1.361, 1.385, 1.411, 1.437, 1.462, 1.488, 1.514,
    1.541, 1.568, 1.598, 1.629, 1.663, 1.699, 1.738, 1.779, 1.823, 1.867, 1.91,
    1.953, 2.004, 2.06, 2.117, 2.181, 2.255, 2.336, 2.419, 2.504, 2.597, 2.702,
    2.831, 2.981, 3.153, 3.352, 3.58, 3.843, 4.145, 4.493, 4.493, 4.493, 4.493,
    4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493,
    4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493,
    4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493, 4.493,
    4.493, 4.493, 4.493, 4.493,
  ],
  "female": [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1.016, 1.031, 1.046, 1.059, 1.072, 1.084, 1.097, 1.11,
    1.124, 1.138, 1.153, 1.17, 1.187, 1.205, 1.223, 1.244, 1.265, 1.288, 1.313,
    1.34, 1.369, 1.401, 1.435, 1.47, 1.507, 1.545, 1.585, 1.625, 1.665, 1.705,
    1.744, 1.778, 1.808, 1.839, 1.873, 1.909, 1.948, 1.989, 2.033, 2.077, 2.12,
    2.163, 2.214, 2.27, 2.327, 2.391, 2.465, 2.546, 2.629, 2.714, 2.714, 2.714,
    2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714,
    2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714,
    2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714,
    2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714, 2.714,
    2.714, 2.714, 2.714, 2.714,
  ],
};

export const getSinclairCoefficient = (bodyweight, min = null) => {
  if (bodyweight <= 0)
    return {
      male: 1,
      female: 1,
    };

  return {
    male: Number(
      Math.pow(
        10,
        sinclair.male.A *
          Math.pow(
            Math.log10(
              Math.min(
                sinclair.male.b,
                Math.max(bodyweight, sinclair.male.min)
              ) / sinclair.male.b
            ),
            2
          )
      ).toFixed(4)
    ),
    female: Number(
      Math.pow(
        10,
        sinclair.female.A *
          Math.pow(
            Math.log10(
              Math.min(
                sinclair.female.b,
                Math.max(bodyweight, sinclair.female.min)
              ) / sinclair.female.b
            ),
            2
          )
      ).toFixed(4)
    ),
  };
};
